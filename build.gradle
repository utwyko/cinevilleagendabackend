buildscript {
    ext {
        kotlinVersion = '1.1.2-2'
        springBootVersion = '2.0.0.M1'
    }
    repositories {
        mavenCentral()
        maven { url "https://repo.spring.io/milestone" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")

        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-allopen:$kotlinVersion")
        classpath "org.jetbrains.kotlin:kotlin-noarg:$kotlinVersion"

        classpath 'se.transmode.gradle:gradle-docker:1.2'
    }
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: "kotlin-jpa"
apply plugin: 'org.springframework.boot'
apply plugin: "io.spring.dependency-management"
apply plugin: 'docker'

jar {
    baseName = 'showtimesbackend'
    version = '0.0.1-SNAPSHOT'
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
    jcenter()
    mavenLocal()
    maven { url 'https://jitpack.io' }
    maven { url "https://repo.spring.io/milestone" }
}

dependencies {
    compile("org.jetbrains.kotlin:kotlin-stdlib:${kotlinVersion}")

    compile('org.springframework.boot:spring-boot-starter-webflux')
    compile("org.springframework.boot:spring-boot-devtools")
    compile("org.springframework.boot:spring-boot-starter-security")

    compile 'org.springframework.data:spring-data-jpa'
    compile("org.springframework.boot:spring-boot-starter-data-jpa")
    compile("com.h2database:h2")

    compile 'com.squareup.retrofit2:retrofit:2.3.0'
    compile 'com.github.dbacinski:retrofit2-reactor-adapter:0465eed5c3'
    compile 'com.squareup.retrofit2:converter-moshi:2.3.0'
    compile 'com.squareup.okhttp3:logging-interceptor:3.5.0'

    compile "io.projectreactor:reactor-kotlin-extensions:1.0.0.M1"

    compile 'io.github.microutils:kotlin-logging:1.4.1'

    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile 'org.amshove.kluent:kluent:1.14'
    testCompile 'io.github.benas:random-beans:3.6.0'
}

bootRun {
    systemProperties System.properties
}

task buildDocker(type: Docker) {
    baseImage = 'develar/java:latest'
    push = project.hasProperty('push')
    tag = 'wrijnsburger/cinevillebackend'
    addFile {
        from jar
        rename {'app.jar'}
    }
    entryPoint(['java', '-Djava.security.egd=file:/dev/./urandom', '-jar', '/app.jar'])
    // exposePort(8080)
}

buildDocker.dependsOn(build)