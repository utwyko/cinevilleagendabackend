
buildscript {
    apply from: 'dependencies.gradle'

    repositories {
        mavenCentral()
        maven { url "https://repo.spring.io/milestone" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:$versions.springBoot")

        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:$versions.kotlin")
        classpath("org.jetbrains.kotlin:kotlin-allopen:$versions.kotlin")
        classpath "org.jetbrains.kotlin:kotlin-noarg:$versions.kotlin"

        classpath 'se.transmode.gradle:gradle-docker:1.2'
    }
}

plugins {
    id 'com.github.ben-manes.versions' version '0.17.0'
}
apply from: 'dependencies.gradle'
apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: "kotlin-jpa"
apply plugin: 'org.springframework.boot'
apply plugin: "io.spring.dependency-management"
apply plugin: 'docker'

jar {
    baseName = 'showtimesbackend'
    version = '0.0.1-SNAPSHOT'
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
    jcenter()
    mavenLocal()
    maven { url "https://repo.spring.io/milestone" }
}

dependencies {
    compile libraries.kotlinStd
    compile libraries.kotlinReflect
    compile libraries.kotlinLogging

    compile libraries.springStarterWebflux
    compile libraries.springDevtools
    compile libraries.springStarterDataJpa
    compile libraries.h2

    compile libraries.jacksonKotlin

    testCompile libraries.springStarterTest
    testCompile libraries.kluent
    testCompile libraries.randomBeans
}

task buildDocker(type: Docker) {
    baseImage = 'develar/java:latest'
    push = project.hasProperty('push')
    tag = 'wrijnsburger/cinevillebackend'
    addFile {
        from jar
        rename {'app.jar'}
    }
    entryPoint(['java', '-Djava.security.egd=file:/dev/./urandom', '-jar', '/app.jar'])
    // exposePort(8080)
}

buildDocker.dependsOn(build)